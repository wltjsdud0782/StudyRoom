<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="seatMapper">
    <resultMap id="seat" type="com.green.StudyRoom.seat.vo.SeatVO">
        <id     column="SEAT_NUM"       property="seatNum"/>
        <result column="SEAT_POWER"     property="seatPower"/>
        <result column="SEAT_FLOOR"     property="seatFloor"/>
        <result column="MEMBER_CODE"    property="memberCode"/>
        <result column="STATUS_NUM"     property="statusNum"/>
        <result column="AGE_CODE"       property="ageCode"/>
        <association property="seatStatusVO"    resultMap="seatStatus"/>
        <association property="floorAgeVO"      resultMap="floorAge"/>
        <association property="memberVO"        resultMap="memberMapper.member"/>
    </resultMap>

    <resultMap id="seatStatus" type="com.green.StudyRoom.seat.vo.SeatStatusVO">
        <id     column="STATUS_NUM"     property="statusNum"/>
        <result column="STATUS_NAME"    property="statusName"/>
    </resultMap>

    <resultMap id="floorAge" type="com.green.StudyRoom.seat.vo.FloorAgeVO">
        <id     column="AGE_CODE" property="ageCode"/>
        <result column="AGE_NAME" property="ageName"/>
    </resultMap>

    <resultMap id="coupon" type="com.green.StudyRoom.seat.vo.CouponVO">
        <id     column="COUPON_CODE"        property="couponCode"/>
        <result column="COUPON_NAME"        property="couponName"/>
        <result column="DISCOUNT_PERCENT"   property="discountPercent"/>
        <result column="CNT" property="cnt"/>
    </resultMap>

    <resultMap id="memberCoupon" type="com.green.StudyRoom.seat.vo.MemberCouponVO">
        <id     column="OWN_COUPON_CODE"    property="ownCouponCode"/>
        <result column="COUPON_CODE"        property="couponCode"/>
        <result column="MEMBER_CODE"        property="memberCode"/>
        <association property="memberVO"    resultMap="memberMapper.member"/>
        <collection property="couponVOList" resultMap="coupon"/>
    </resultMap>

    <resultMap id="salesInfo" type="com.green.StudyRoom.seat.vo.SalesInfoVO">
        <id column="SALES_CODE"         property="salesCode"/>
        <result column="SALES_FEE"      property="salesFee"/>
        <result column="SALES_DATE"     property="salesDate"/>
        <result column="CHARGE_CODE"    property="chargeCode"/>
        <result column="CNT" property="cnt"/>
        <result column="YEAR_SALES" property="yearSales"/>
        <result column="MONTH_SALES" property="monthSales"/>
        <collection property="chargeVOList" resultMap="chargeMapper.charge"/>
    </resultMap>

<!--~~~~~~~~~~~~~~~~~~~~~좌석 선택 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 좌석 현황 SELECT  -->
    <select id="seatList" resultMap="seat">
        SELECT
        SEAT_NUM
        , SEAT_POWER
        , SEAT_FLOOR
        , SEAT.MEMBER_CODE
        , CASE WHEN CHAR_LENGTH(MEMBER_NAME) > 2 THEN
        CONCAT(
        SUBSTRING(MEMBER_NAME, 1, 1)
        ,LPAD('*', CHAR_LENGTH(MEMBER_NAME) - 2, '*')
        ,SUBSTRING(MEMBER_NAME, CHAR_LENGTH(MEMBER_NAME), CHAR_LENGTH(MEMBER_NAME))
        )
        ELSE CONCAT(
        SUBSTRING(MEMBER_NAME, 1, 1)
        ,LPAD('*', CHAR_LENGTH(MEMBER_NAME) - 1, '*')
        )
        END AS MEMBER_NAME
        , (SELECT right(MEMBER_TEL, 4)) MEMBER_TEL
        , SEAT.STATUS_NUM
        , STATUS_NAME
        , SEAT.AGE_CODE
        , AGE_NAME
        FROM studyroom_seat SEAT
        LEFT OUTER JOIN studyroom_member MEM
        ON SEAT.MEMBER_CODE = MEM.MEMBER_CODE
        INNER JOIN seat_status STA
        ON SEAT.STATUS_NUM = STA.STATUS_NUM
        INNER JOIN floor_age AGE
        ON SEAT.AGE_CODE = AGE.AGE_CODE
        ORDER BY SEAT_NUM ASC
    </select>

    <!-- 회원의 좌석 SELECT  -->
    <select id="moveAndOut" resultMap="seat">
        SELECT
            SEAT_NUM
            , SEAT_POWER
            , SEAT_FLOOR
            , AGE_NAME
        FROM STUDYROOM_SEAT SEAT
        INNER JOIN FLOOR_AGE AGE
        ON SEAT.AGE_CODE = AGE.AGE_CODE
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <!-- 회원의 입실, 퇴실 SELECT  -->
    <select id="inOutTime" resultMap="memberMapper.inOut">
        SELECT
            DATE_FORMAT(INOUT_TIME, '%y/%m/%d  %h:%i') INOUT_TIME
            , CASE
                WHEN IN_OUT = 'IN' THEN '입실'
                WHEN IN_OUT = 'OUT' THEN '퇴실'
                END IN_OUT
        FROM STUDYROOM_INOUT
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY INOUT_TIME DESC
    </select>


<!--~~~~~~~~~~~~~~~~~~~~~이용권 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!--  회원의 이용권 유무 SELECT  -->
    <select id="haveCharge" resultMap="memberMapper.approval">
        SELECT
        CHARGE_NAME
        FROM approval APP
        INNER JOIN STUDYROOM_CHARGE CHARG
        ON APP.CHARGE_CODE = CHARG.CHARGE_CODE
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY APPROVAL_DATE;
    </select>

    <!--  회원의 이용권 결제일 SELECT  -->
    <select id="haveChargeApprovalDate" resultMap="memberMapper.approval">
        SELECT
        DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') APPROVAL_DATE
        FROM approval
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY APPROVAL_DATE;
    </select>

    <!--  회원의 이용권 이용 가능일 수 SELECT  -->
    <select id="haveChargeDate" resultMap="memberMapper.approval">
        SELECT CHARGE_DATE
        FROM STUDYROOM_CHARGE CHARGE
        INNER JOIN APPROVAL APP
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY APPROVAL_DATE;
    </select>

    <!--  회원의 이용권이 끝나는 날짜 SELECT  -->
    <select id="haveChargeEndDate" resultType="String">
        SELECT DATE_ADD(
        (SELECT DATE_FORMAT(MIN(APPROVAL_DATE), '%Y-%m-%d') FROM approval WHERE MEMBER_CODE = #{memberCode})
        , INTERVAL (
        SELECT
        CHARGE_DATE
        FROM STUDYROOM_CHARGE CHARGE
        INNER JOIN APPROVAL APP
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode} AND APPROVAL_DATE = (SELECT MIN(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode}))
        )
        DAY) AS END_DATE;
    </select>

    <!--  회원의 이용권 남은일 수 SELECT  -->
    <select id="haveChargeRemainDate" resultType="int">
        SELECT
        TIMESTAMPDIFF(DAY, DATE_FORMAT(now(), '%Y-%m-%d')
        , (SELECT DATE_ADD(
        (SELECT DATE_FORMAT(MIN(APPROVAL_DATE), '%Y-%m-%d') FROM approval WHERE MEMBER_CODE = #{memberCode})
        , INTERVAL (
        SELECT CHARGE_DATE
        FROM STUDYROOM_CHARGE CHARGE
        INNER JOIN APPROVAL APP
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode} AND APPROVAL_DATE = (SELECT MIN(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode}))
        ) DAY))
        ) AS REMAIN_DATE
        FROM approval
        WHERE MEMBER_CODE = #{memberCode} AND APPROVAL_DATE = (SELECT MIN(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode});
    </select>

    <!-- 두번째 이용권 구입시 결재일 첫번째 이용권의 끝나는 날짜로 자동 UPDATE  -->
    <update id="updateApp">
        UPDATE approval
        SET
        APPROVAL_DATE
        = (
        SELECT DATE_ADD(
        (SELECT MIN(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode})
        , INTERVAL (
        SELECT
        CHARGE_DATE
        FROM STUDYROOM_CHARGE CHARGE
        INNER JOIN APPROVAL APP
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode} AND APPROVAL_DATE = (SELECT MIN(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode}))
        )
        DAY)
        )
        WHERE APPROVAL_DATE = (SELECT MAX(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode});
    </update>

    <!--  오늘 날짜 SELECT  20240410  -->
    <select id="today" resultType="String">
        SELECT DATE_FORMAT(now(), '%Y%m%d')
    </select>
    <!-- 오늘 날짜 SELECT(2)  240410  -->
    <select id="buyToday" resultType="int">
        SELECT DATE_FORMAT(now(), '%y%m%d')
    </select>

    <!-- 이용권 만료일이 됐는지 안됐는지 SELECT  -->
<!--    <select id="isExpires" resultType="String">-->
<!--    SELECT-->
<!--    IF(-->
<!--    (SELECT-->
<!--    (SELECT DATE_ADD(-->
<!--    (SELECT DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') FROM approval WHERE MEMBER_CODE = #{memberCode})-->
<!--    , INTERVAL (-->
<!--    SELECT-->
<!--    CHARGE_DATE-->
<!--    FROM STUDYROOM_CHARGE CHARGE-->
<!--    INNER JOIN APPROVAL APP-->
<!--    ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE-->
<!--    WHERE-->
<!--    APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode})-->
<!--    ) DAY)-->
<!--    )-->
<!--    FROM approval-->
<!--    WHERE MEMBER_CODE = #{memberCode}) &lt; (SELECT DATE_FORMAT(now(), '%Y-%m-%d'))-->
<!--    , '만료일이 오늘보다 이전'-->
<!--    , '만료일이 오늘보다 이후')AS EXPIRES-->
<!--    </select>-->

    <!--  이용권 만료 삭제 DELETE  -->
    <delete id="chargeDelete">
        DELETE
        FROM APPROVAL
        WHERE APPROVAL_DATE = (SELECT MIN(APPROVAL_DATE) FROM approval WHERE MEMBER_CODE = #{memberCode});
    </delete>

<!--~~~~~~~~~~~~~~~~~~~~~입실 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 자리 입실 UPDATE  -->
    <update id="inSeat">
        UPDATE STUDYROOM_SEAT
        SET
            SEAT_POWER = 'ON'
            , STATUS_NUM = 1
            , MEMBER_CODE = #{memberCode}
        WHERE SEAT_NUM = #{seatNum}
    </update>

    <!-- 회원 입실 INSERT  -->
    <insert id="inMem">
        INSERT INTO STUDYROOM_INOUT (
            MEMBER_CODE
            , IN_OUT
        ) VALUES (
            #{memberCode}
            , 'IN'
        )
    </insert>

<!--~~~~~~~~~~~~~~~~~~~~~퇴실 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 자리 퇴실 UPDATE  -->
    <update id="outSeat">
        UPDATE STUDYROOM_SEAT
        SET
        SEAT_POWER = 'OFF'
        , STATUS_NUM = 2
        , MEMBER_CODE = NULL
        WHERE MEMBER_CODE = #{memberCode}
    </update>

    <!-- 회원 퇴실 INSERT  -->
    <insert id="outMem">
        INSERT INTO STUDYROOM_INOUT (
        MEMBER_CODE
        , IN_OUT
        ) VALUES (
        #{memberCode}
        , 'OUT'
        )
    </insert>

<!--~~~~~~~~~~~~~~~~~~~~~이용권 구매 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 이용권 목록 SELECT  -->
    <select id="chargeList" resultMap="chargeMapper.charge">
        SELECT
        CHARGE_CODE
        , CHARGE_NAME
        , CHARGE_FEE
        FROM STUDYROOM_CHARGE
        ORDER BY CHARGE_CODE DESC
    </select>

    <!-- 선택한 이용권 SELECT  -->
    <select id="chargeBuy" resultMap="chargeMapper.charge">
        SELECT
        CHARGE_NAME
        , CHARGE_FEE
        , CHARGE_CODE
        FROM STUDYROOM_CHARGE
        WHERE CHARGE_CODE = #{chargeCode}
    </select>

<!--~~~~~~~~~~~~~~~~~~~~~카드 결제 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 구입을 위한 회원의 정보 SELECT  -->
    <select id="selMem" resultMap="memberMapper.member">
        SELECT *
        FROM STUDYROOM_MEMBER
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <!-- 구입 완료 정보 INSERT  -->
    <insert id="buyCard">
        INSERT INTO APPROVAL (
            APPROVAL_CODE
            , APPROVAL_FEE
            , MEMBER_CODE
            , CHARGE_CODE
            , COUPON_USE
        ) VALUES (
            #{approvalCode}
            , #{approvalFee}
            , #{memberCode}
            , #{chargeCode}
            , #{couponUse}
        )
    </insert>

<!--~~~~~~~~~~~~~~~~~~~~~관리자 좌석 관리 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 관리자 좌석 관리 UPDATE  -->
    <update id="adminUpdateSeat">
        UPDATE
        STUDYROOM_SEAT
        SET SEAT_POWER = #{seatPower}
            , STATUS_NUM = #{statusNum}
        WHERE SEAT_NUM = #{seatNum}
    </update>

    <!--  회원의 보유한 이용권 정보 조회  -->
    <select id="myBuyDetail" resultMap="memberMapper.approval">
        SELECT
        DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') APPROVAL_DATE
        , CASE
        WHEN COUPON_USE = 'Y' THEN '사용함'
        WHEN COUPON_USE = 'N' THEN '사용안함'
        END COUPON_USE
        , APPROVAL_FEE
        FROM APPROVAL APP
        INNER JOIN STUDYROOM_CHARGE CHARGE
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY APPROVAL_DATE;
    </select>


<!--~~~~~~~~~~~~~~~~~~~~~쿠폰 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 쿠폰 목록 SELECT  -->
    <select id="coupon" resultMap="coupon">
        SELECT
        *
        FROM COUPON
    </select>


    <!--  회원이 보유한 쿠폰 SELECT  -->
    <select id="ownCoupon" resultMap="memberCoupon">
        SELECT
            OWN_COUPON_CODE
            , COUPON_CODE
            , (SELECT
                COUPON_NAME
                FROM coupon
                WHERE COUPON_CODE = member_coupon.COUPON_CODE) COUPON_NAME
            , (SELECT
                DISCOUNT_PERCENT
                FROM coupon
                WHERE COUPON_CODE = member_coupon.COUPON_CODE) DISCOUNT_PERCENT
        FROM member_coupon
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY OWN_COUPON_CODE
    </select>

    <!-- 사용 한 쿠폰 삭제 DELETE  -->
    <delete id="deleteCoupon">
        DELETE FROM MEMBER_COUPON
        WHERE OWN_COUPON_CODE = #{ownCouponCode}
    </delete>

<!--~~~~~~~~~~~~~~~~~~~~~채팅 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 대화 내용 SELECT  -->
    <select id="userMsg" resultMap="messageMapper.message">
        SELECT
            MESSAGE_CONTENT
            , MEMBER_CODE
            , TO_FROM
            , DATE_FORMAT(MESSAGE_DATE, '%Y-%m-%d   %p %l:%i') MESSAGE_DATE
        FROM STUDYROOM_MESSAGE
        WHERE MEMBER_CODE = #{memberCode}
        ORDER BY MESSAGE_CODE DESC LIMIT 100
    </select>

    <!-- 회원이 대화 전송 시 INSERT  -->
    <insert id="userSend">
        INSERT INTO STUDYROOM_MESSAGE (
            MESSAGE_CONTENT
            , MEMBER_CODE
            , TO_FROM
        ) VALUES (
            #{messageContent}
            , #{memberCode}
            , 'FROM'
        )
    </insert>

<!--~~~~~~~~~~~~~~~~~~~~~매출 관련~~~~~~~~~~~~~~~~~~~~~-->

    <!-- 구입 시 매출 INSERT  -->
    <insert id="insertSales">
        INSERT INTO sales_info (
            SALES_FEE
            , CHARGE_CODE
        ) VALUES (
            #{approvalFee}
            , #{chargeCode}
        )
    </insert>

    <!-- 전체 매출 SELECT  -->
    <select id="selectSales">
        SELECT *
        FROM SALES_INFO;
    </select>

<!-- Admin 전용  -->
    <!-- Admin 전용 좌석 현황 SELECT  -->
    <select id="adminSeatList" resultMap="seat">
        SELECT
        SEAT_NUM
        , SEAT_POWER
        , SEAT_FLOOR
        , SEAT.MEMBER_CODE
        , MEMBER_TEL
        , MEMBER_NAME
        , MEMBER_ID
        , SEAT.STATUS_NUM
        , STATUS_NAME
        , SEAT.AGE_CODE
        , AGE_NAME
        FROM studyroom_seat SEAT
        LEFT OUTER JOIN studyroom_member MEM
        ON SEAT.MEMBER_CODE = MEM.MEMBER_CODE
        INNER JOIN seat_status STA
        ON SEAT.STATUS_NUM = STA.STATUS_NUM
        INNER JOIN floor_age AGE
        ON SEAT.AGE_CODE = AGE.AGE_CODE
        ORDER BY SEAT_NUM ASC
    </select>

    <select id="adminSeatMem" resultMap="memberMapper.member">
        SELECT
            MEMBER_CODE
            , MEMBER_ID
            , MEMBER_NAME
            , MEMBER_TEL
        FROM STUDYROOM_MEMBER
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <select id="adminSeatFloor" resultMap="seat">
        SELECT SEAT_FLOOR FROM studyroom_seat GROUP BY SEAT_FLOOR
    </select>

    <select id="adminSeatNum" resultMap="seat">
        SELECT
        SEAT_NUM FROM studyroom_seat
        WHERE SEAT_FLOOR = #{seatFloor}
        AND STATUS_NUM = 2
    </select>


</mapper>
