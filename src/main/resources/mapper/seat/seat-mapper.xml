<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="seatMapper">
    <resultMap id="seat" type="com.green.StudyRoom.seat.vo.SeatVO">
        <id     column="SEAT_NUM"       property="seatNum"/>
        <result column="SEAT_POWER"     property="seatPower"/>
        <result column="SEAT_FLOOR"     property="seatFloor"/>
        <result column="MEMBER_CODE"    property="memberCode"/>
        <result column="STATUS_NUM"     property="statusNum"/>
        <result column="AGE_CODE"       property="ageCode"/>
        <result column="AGE_CODE"       property="ageCode"/>
        <association property="seatStatusVO" resultMap="seatStatus"/>
        <association property="floorAgeVO" resultMap="floorAge"/>
        <association property="memberVO" resultMap="memberMapper.member"/>
    </resultMap>

    <resultMap id="seatStatus" type="com.green.StudyRoom.seat.vo.SeatStatusVO">
        <id     column="STATUS_NUM"     property="statusNum"/>
        <result column="STATUS_NAME"    property="statusName"/>
    </resultMap>

    <resultMap id="floorAge" type="com.green.StudyRoom.seat.vo.FloorAgeVO">
        <id     column="AGE_CODE" property="ageCode"/>
        <result column="AGE_NAME" property="ageName"/>
    </resultMap>

    <select id="chargeList" resultMap="chargeMapper.charge">
        SELECT
            CHARGE_CODE
            , CHARGE_NAME
            , CHARGE_FEE
        FROM STUDYROOM_CHARGE
        ORDER BY CHARGE_CODE DESC
    </select>

    <select id="chargeBuy" resultMap="chargeMapper.charge">
        SELECT
            CHARGE_NAME
            , CHARGE_FEE
            , CHARGE_CODE
        FROM STUDYROOM_CHARGE
        WHERE CHARGE_CODE = #{chargeCode}
    </select>

    <select id="seatList" resultMap="seat">
        SELECT
        SEAT_NUM
        , SEAT_POWER
        , SEAT_FLOOR
        , SEAT.MEMBER_CODE
        , CASE WHEN CHAR_LENGTH(MEMBER_NAME) > 2 THEN
        CONCAT(
        SUBSTRING(MEMBER_NAME, 1, 1)
        ,LPAD('*', CHAR_LENGTH(MEMBER_NAME) - 2, '*')
        ,SUBSTRING(MEMBER_NAME, CHAR_LENGTH(MEMBER_NAME), CHAR_LENGTH(MEMBER_NAME))
        )
        ELSE CONCAT(
        SUBSTRING(MEMBER_NAME, 1, 1)
        ,LPAD('*', CHAR_LENGTH(MEMBER_NAME) - 1, '*')
        )
        END AS MEMBER_NAME
        , (SELECT right(MEMBER_TEL, 4)) MEMBER_TEL
        , SEAT.STATUS_NUM
        , STATUS_NAME
        , SEAT.AGE_CODE
        , AGE_NAME
        FROM studyroom_seat SEAT
        LEFT OUTER JOIN studyroom_member MEM
        ON SEAT.MEMBER_CODE = MEM.MEMBER_CODE
        INNER JOIN seat_status STA
        ON SEAT.STATUS_NUM = STA.STATUS_NUM
        INNER JOIN floor_age AGE
        ON SEAT.AGE_CODE = AGE.AGE_CODE
        ORDER BY SEAT_NUM ASC
    </select>

    <select id="moveAndOut" resultMap="seat">
        SELECT SEAT_NUM
        FROM STUDYROOM_SEAT SEAT
        INNER JOIN studyroom_member MEM
        ON SEAT.MEMBER_CODE = MEM.MEMBER_CODE
        WHERE SEAT.MEMBER_CODE = #{memberCode};
    </select>

    <update id="inSeat">
        UPDATE STUDYROOM_SEAT
        SET
            SEAT_POWER = 'ON'
            , STATUS_NUM = 1
            , MEMBER_CODE = #{memberCode}
        WHERE SEAT_NUM = #{seatNum}
    </update>

    <insert id="inMem">
        INSERT INTO STUDYROOM_INOUT (
            MEMBER_CODE
            , IN_OUT
        ) VALUES (
            #{memberCode}
            , 'IN'
        )
    </insert>

    <!-- 퇴실  -->
    <update id="outSeat">
        UPDATE STUDYROOM_SEAT
        SET
        SEAT_POWER = 'OFF'
        , STATUS_NUM = 2
        , MEMBER_CODE = NULL
        WHERE MEMBER_CODE = #{memberCode}
    </update>
    <update id="outMem">
        UPDATE STUDYROOM_INOUT
        SET
        IN_OUT = 'OUT'
        WHERE MEMBER_CODE = #{memberCode}
    </update>



    <!--  카드 결제 정보 추가  -->
    <select id="selMem" resultMap="memberMapper.member">
        SELECT *
        FROM STUDYROOM_MEMBER
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <insert id="buyCard">
        INSERT INTO APPROVAL (
            APPROBAL_CODE
            , MEMBER_CODE
            , CHARGE_CODE
        ) VALUES (
            #{approbalCode}
            , #{memberCode}
            , #{chargeCode}
        )
    </insert>

</mapper>































