<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="seatMapper">
    <resultMap id="seat" type="com.green.StudyRoom.seat.vo.SeatVO">
        <id     column="SEAT_NUM"       property="seatNum"/>
        <result column="SEAT_POWER"     property="seatPower"/>
        <result column="SEAT_FLOOR"     property="seatFloor"/>
        <result column="MEMBER_CODE"    property="memberCode"/>
        <result column="STATUS_NUM"     property="statusNum"/>
        <result column="AGE_CODE"       property="ageCode"/>
        <result column="AGE_CODE"       property="ageCode"/>
        <association property="seatStatusVO" resultMap="seatStatus"/>
        <association property="floorAgeVO" resultMap="floorAge"/>
        <association property="memberVO" resultMap="memberMapper.member"/>
    </resultMap>

    <resultMap id="seatStatus" type="com.green.StudyRoom.seat.vo.SeatStatusVO">
        <id     column="STATUS_NUM"     property="statusNum"/>
        <result column="STATUS_NAME"    property="statusName"/>
    </resultMap>

    <resultMap id="floorAge" type="com.green.StudyRoom.seat.vo.FloorAgeVO">
        <id     column="AGE_CODE" property="ageCode"/>
        <result column="AGE_NAME" property="ageName"/>
    </resultMap>

<!--  좌석 선택 화면 필요 쿼리  -->
    <select id="seatList" resultMap="seat">
        SELECT
        SEAT_NUM
        , SEAT_POWER
        , SEAT_FLOOR
        , SEAT.MEMBER_CODE
        , CASE WHEN CHAR_LENGTH(MEMBER_NAME) > 2 THEN
        CONCAT(
        SUBSTRING(MEMBER_NAME, 1, 1)
        ,LPAD('*', CHAR_LENGTH(MEMBER_NAME) - 2, '*')
        ,SUBSTRING(MEMBER_NAME, CHAR_LENGTH(MEMBER_NAME), CHAR_LENGTH(MEMBER_NAME))
        )
        ELSE CONCAT(
        SUBSTRING(MEMBER_NAME, 1, 1)
        ,LPAD('*', CHAR_LENGTH(MEMBER_NAME) - 1, '*')
        )
        END AS MEMBER_NAME
        , (SELECT right(MEMBER_TEL, 4)) MEMBER_TEL
        , SEAT.STATUS_NUM
        , STATUS_NAME
        , SEAT.AGE_CODE
        , AGE_NAME
        FROM studyroom_seat SEAT
        LEFT OUTER JOIN studyroom_member MEM
        ON SEAT.MEMBER_CODE = MEM.MEMBER_CODE
        INNER JOIN seat_status STA
        ON SEAT.STATUS_NUM = STA.STATUS_NUM
        INNER JOIN floor_age AGE
        ON SEAT.AGE_CODE = AGE.AGE_CODE
        ORDER BY SEAT_NUM ASC
    </select>

    <select id="moveAndOut" resultMap="seat">
        SELECT SEAT_NUM
        FROM STUDYROOM_SEAT SEAT
        INNER JOIN studyroom_member MEM
        ON SEAT.MEMBER_CODE = MEM.MEMBER_CODE
        WHERE SEAT.MEMBER_CODE = #{memberCode}
    </select>


<!--  이용권 관련 필요 쿼리  -->

    <!--  지정한 회원의 이용권 유무  -->
    <select id="haveCharge" resultType="String">
        SELECT
            CHARGE_NAME
        FROM approval APP
        INNER JOIN STUDYROOM_CHARGE CHARG
        ON APP.CHARGE_CODE = CHARG.CHARGE_CODE
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <!--  지정한 회원의 이용권 결제일  -->
    <select id="haveChargeApprovalDate" resultType="String">
        SELECT
            DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') APPROVAL_DATE
        FROM approval
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <!--  지정한 회원의 이용권 이용 가능 일 수  -->
    <select id="haveChargeDate" resultType="int">
        SELECT
            CHARGE_DATE
        FROM STUDYROOM_CHARGE CHARGE
        INNER JOIN APPROVAL APP
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode})
    </select>

    <!--  지정한 회원의 이용권 끝나는 날짜  -->
    <select id="haveChargeEndDate" resultType="String">
    SELECT
        (SELECT DATE_ADD(
            (SELECT DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') FROM approval WHERE MEMBER_CODE = #{memberCode})
            , INTERVAL (
                SELECT
                    CHARGE_DATE
                FROM STUDYROOM_CHARGE CHARGE
                INNER JOIN APPROVAL APP
                ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
                WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode})
            ) DAY)
        ) AS END_DATE
    FROM approval
    WHERE MEMBER_CODE = #{memberCode}
    </select>

    <!--  지정한 회원의 이용권 남은 일 수  -->
    <select id="haveChargeRemainDate" resultType="int">
        SELECT
            TIMESTAMPDIFF(DAY, DATE_FORMAT(now(), '%Y-%m-%d')
            , (SELECT
                (SELECT DATE_ADD(
                    (SELECT DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') FROM approval WHERE MEMBER_CODE = #{memberCode})
                    , INTERVAL (
                        SELECT CHARGE_DATE
                        FROM STUDYROOM_CHARGE CHARGE
                        INNER JOIN APPROVAL APP
                        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
                        WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode})
                        ) DAY)
                    ) AS END_DATE
                FROM approval
                WHERE MEMBER_CODE = #{memberCode})
            ) AS REMAIN_DATE
        FROM approval
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <!--  오늘 날짜 구하기  -->
    <select id="today" resultType="String">
        SELECT DATE_FORMAT(now(), '%Y%m%d')
    </select>
    <select id="buyToday" resultType="String">
        SELECT DATE_FORMAT(now(), '%y%m%d')
    </select>

    <select id="isExpires" resultType="String">
    SELECT
    IF(
    (SELECT
    (SELECT DATE_ADD(
    (SELECT DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') FROM approval WHERE MEMBER_CODE = #{memberCode})
    , INTERVAL (
    SELECT
    CHARGE_DATE
    FROM STUDYROOM_CHARGE CHARGE
    INNER JOIN APPROVAL APP
    ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
    WHERE
    APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode})
    ) DAY)
    )
    FROM approval
    WHERE MEMBER_CODE = #{memberCode}) &lt; (SELECT DATE_FORMAT(now(), '%Y-%m-%d'))
    , '만료일이 오늘보다 이전'
    , '만료일이 오늘보다 이후')AS EXPIRES
    </select>

    <!--  이용권 만료 삭제  -->
    <delete id="chargeDelete">
    DELETE
    FROM APPROVAL
    WHERE MEMBER_CODE = #{memberCode}
    </delete>

<!-- 입실 필요 쿼리  -->
    <update id="inSeat">
        UPDATE STUDYROOM_SEAT
        SET
            SEAT_POWER = 'ON'
            , STATUS_NUM = 1
            , MEMBER_CODE = #{memberCode}
        WHERE SEAT_NUM = #{seatNum}
    </update>

    <insert id="inMem">
        INSERT INTO STUDYROOM_INOUT (
            MEMBER_CODE
            , IN_OUT
        ) VALUES (
            #{memberCode}
            , 'IN'
        )
    </insert>

<!-- 퇴실 필요 쿼리  -->
    <update id="outSeat">
        UPDATE STUDYROOM_SEAT
        SET
        SEAT_POWER = 'OFF'
        , STATUS_NUM = 2
        , MEMBER_CODE = NULL
        WHERE MEMBER_CODE = #{memberCode}
    </update>
    <insert id="outMem">
        INSERT INTO STUDYROOM_INOUT (
        MEMBER_CODE
        , IN_OUT
        ) VALUES (
        #{memberCode}
        , 'OUT'
        )
    </insert>

<!--  이용권 구매 화면 필요 쿼리  -->
    <select id="chargeList" resultMap="chargeMapper.charge">
        SELECT
        CHARGE_CODE
        , CHARGE_NAME
        , CHARGE_FEE
        FROM STUDYROOM_CHARGE
        ORDER BY CHARGE_CODE DESC
    </select>

    <select id="chargeBuy" resultMap="chargeMapper.charge">
        SELECT
        CHARGE_NAME
        , CHARGE_FEE
        , CHARGE_CODE
        FROM STUDYROOM_CHARGE
        WHERE CHARGE_CODE = #{chargeCode}
    </select>

<!--  카드 결제 필요 쿼리  -->
    <select id="selMem" resultMap="memberMapper.member">
        SELECT *
        FROM STUDYROOM_MEMBER
        WHERE MEMBER_CODE = #{memberCode}
    </select>

    <insert id="buyCard">
        INSERT INTO APPROVAL (
            APPROVAL_CODE
            , MEMBER_CODE
            , CHARGE_CODE
        ) VALUES (
            #{approvalCode}
            , #{memberCode}
            , #{chargeCode}
        )
    </insert>

<!-- 관리자 좌석 관리 필요 쿼리  -->
    <update id="adminUpdateSeat">
        UPDATE
        STUDYROOM_SEAT
        SET SEAT_POWER = #{seatPower}
            , STATUS_NUM = #{statusNum}
        WHERE SEAT_NUM = #{seatNum}
    </update>

<!--  보유한 이용권 정보 조회  -->
    <select id="myBuyDetail" resultMap="memberMapper.approval">
        SELECT
            DATE_FORMAT(APPROVAL_DATE, '%Y-%m-%d') APPROVAL_DATE
            , CASE
                WHEN CARD = 'Y' THEN '카드'
                WHEN CARD = 'N' THEN '카드외'
                END CARD
            , CHARGE_FEE
        FROM APPROVAL APP
        INNER JOIN STUDYROOM_CHARGE CHARGE
        ON APP.CHARGE_CODE = CHARGE.CHARGE_CODE
        WHERE APPROVAL_CODE = (SELECT APPROVAL_CODE FROM APPROVAL WHERE MEMBER_CODE = #{memberCode})
    </select>

</mapper>































